<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置c3p0连接池-->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>


    <!--整合aop事务-->
    <!--核心事务管理器-->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!--需要sessionFactory才能管理事务-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--开启注解事务--><!--在Service中使用注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--
        hibernate与Spring整合配置如下
                    将sessionFactory对象交给Spring来管理

        将SessionFactory配置到Spring容器中
        加载配置方案1：仍然使用外部的hibernate.cfg.xml配置信息
        -->
    <!--<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    </bean>-->
    <!-- 加载配置方案2:在spring配置中放置hibernate配置信息 -->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--将连接池注入到sessionFactory，hibernate会通过连接池获得连接-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置hibernate基本信息-->
        <property name="hibernateProperties">
            <props>
                <!--必选配置 有了c3p0连接池，就不需要下边这些了-->
                <!--<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <prop key="hibernate.connection.url">jdbc:mysql:///ssh</prop>
                <prop key="hibernate.connection.username">root</prop>
                <prop key="hibernate.connection.password">123456</prop>-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>

                <!--可选配置-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!--引入orm元数据,指定orm元数据所在的包路径，Spring会自动读取包中的所有配置-->
        <property name="mappingDirectoryLocations" value="classpath:com/dong1990/domain"></property>
    </bean>

    <!--action配置-->
    <!--注意：action对象作用范围一定是多例的，这样才符合Struts2架构,所以要在bean的action里加上scope="prototype"-->
    <bean name="userAction" class="com.dong1990.web.action.UserAction" scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>
    <!--service配置-->
    <bean name="userService" class="com.dong1990.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <!--dao配置-->
    <bean name="userDao" class="com.dong1990.dao.impl.UserDaoImpl">
        <!--注入sessionFactory-->
        <!--dao层只要是集成了HibernateDaoSupport对象的都是注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean name="customerAction" class="com.dong1990.web.action.CustomerAction" scope="prototype">
        <property name="customerService" ref="customerService"></property>
    </bean>
    <!--service配置-->
    <bean name="customerService" class="com.dong1990.service.impl.CustomerServiceImpl">
        <property name="customerDao" ref="customerDao"></property>
    </bean>
    <!--dao配置-->
    <bean name="customerDao" class="com.dong1990.dao.impl.CustomerDaoImpl">
        <!--注入sessionFactory-->
        <!--dao层只要是集成了HibernateDaoSupport对象的都是注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean name="linkManAction" class="com.dong1990.web.action.LinkManAction" scope="prototype">
        <property name="linkManService" ref="linkManService"></property>
    </bean>
    <!--service配置-->
    <bean name="linkManService" class="com.dong1990.service.impl.LinkManServiceImpl">
        <property name="linkManDao" ref="linkManDao"></property>
    </bean>
    <!--dao配置-->
    <bean name="linkManDao" class="com.dong1990.dao.impl.LinkManDaoImpl">
        <!--注入sessionFactory-->
        <!--dao层只要是集成了HibernateDaoSupport对象的都是注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean name="baseDictAction" class="com.dong1990.web.action.BaseDictAction" scope="prototype">
        <property name="baseDictService" ref="baseDictService"></property>
    </bean>
    <!--service配置-->
    <bean name="baseDictService" class="com.dong1990.service.impl.BaseDictServiceImpl">
        <property name="baseDictDao" ref="baseDictDao"></property>
    </bean>
    <!--dao配置-->
    <bean name="baseDictDao" class="com.dong1990.dao.impl.BaseDictDaoImpl">
        <!--注入sessionFactory-->
        <!--dao层只要是集成了HibernateDaoSupport对象的都是注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean name="saleVisitAction" class="com.dong1990.web.action.SaleVisitAction" scope="prototype">
        <property name="saleVisitService" ref="saleVisitService"></property>
    </bean>
    <!--service配置-->
    <bean name="saleVisitService" class="com.dong1990.service.impl.SaleVisitServiceImpl">
        <property name="saleVisitDao" ref="saleVisitDao"></property>
    </bean>
    <!--dao配置-->
    <bean name="saleVisitDao" class="com.dong1990.dao.impl.SaleVisitDaoImpl">
        <!--注入sessionFactory-->
        <!--dao层只要是集成了HibernateDaoSupport对象的都是注入sessionFactory-->
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

</beans>